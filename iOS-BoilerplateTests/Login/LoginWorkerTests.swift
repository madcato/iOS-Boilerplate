//
//  LoginWorkerTests.swift
//  iOS-Boilerplate
//
//  Created by Daniel Vela Angulo on 14/01/2019.
//  Copyright (c) 2019 veladan. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import iOS_Boilerplate
import XCTest

class LoginWorkerTests: XCTestCase {
    // MARK: Subject under test

    var sut: LoginWorker?

    // MARK: Test lifecycle

    override func setUp() {
        super.setUp()
        setupLoginWorker()
    }

    override func tearDown() {
        super.tearDown()
    }

    // MARK: Test setup

    func setupLoginWorker() {
        sut = LoginWorker()
    }

    // MARK: Test doubles

    // MARK: Tests

    func testValidateUserName() {
        XCTAssertEqual(sut?.validate(userName: nil), false, "nil is not a good username")
        XCTAssertEqual(sut?.validate(userName: ""), false, "empty is not a good username")
    }

    func testValidatePassword() {
        XCTAssertEqual(sut?.validate(password: nil), false, "nil is not a good password")
        XCTAssertEqual(sut?.validate(password: ""), false, "empty is not a good password")
    }

    func testSignInOk() {
        let expectation = XCTestExpectation(description: "signin")
        var result = Login.Process.Response.Result.loginInvalid
        sut?.doSignIn(for: "dani", and: "1234") { ret in
            result = ret
            expectation.fulfill()
        }
        wait(for: [expectation], timeout: 6.0)
        XCTAssertEqual(result, Login.Process.Response.Result.loginOk, "must be an ok login")
    }

    func testSignInBad() {
        let expectation = XCTestExpectation(description: "signin")
        var result = Login.Process.Response.Result.loginOk
        sut?.doSignIn(for: "dani", and: "12dasdf34") { ret in
            result = ret
            expectation.fulfill()
        }
        wait(for: [expectation], timeout: 6.0)
        XCTAssertEqual(result, Login.Process.Response.Result.loginInvalid, "must be an ok login")
    }
}
