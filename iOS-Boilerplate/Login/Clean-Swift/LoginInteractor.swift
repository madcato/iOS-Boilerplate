//
//  LoginInteractor.swift
//  iOS-Boilerplate
//
//  Created by Daniel Vela Angulo on 11/01/2019.
//  Copyright (c) 2019 veladan. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol LoginBusinessLogic {
    func doSignIn(request: Login.Process.Request)
}

protocol LoginDataStore {
    // var name: String { get set }
}

class LoginInteractor: LoginBusinessLogic, LoginDataStore {
    var presenter: LoginPresentationLogic?
    var worker: LoginWorker?
    // var name: String = ""

    // MARK: Do something

    func doSignIn(request: Login.Process.Request) {
        worker = LoginWorker()
        let userName: String? = request.userName
        guard worker?.validate(userName: userName) == true else {
            presenter?.presentError(code: .invalidUserName, description: "Invalid user name")
            return
        }
        let password = request.password
        guard worker?.validate(password: password) == true else {
            presenter?.presentError(code: .invalidPassword, description: "Invalid password")
            return
        }

        worker?.doSignIn(for: userName ?? "", and: password ?? "") { result in
            let response = Login.Process.Response(result: result)
            self.presenter?.presentLogin(response: response)
        }
    }
}
