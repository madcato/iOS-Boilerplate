//
//  LoginPresenter.swift
//  iOS-Boilerplate
//
//  Created by Daniel Vela Angulo on 11/01/2019.
//  Copyright (c) 2019 veladan. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol LoginPresentationLogic {
    func presentLogin(response: Login.Process.Response)
    func presentError(code: Login.Process.Response.Error, description: String)
}

class LoginPresenter: LoginPresentationLogic {
    weak var viewController: LoginDisplayLogic?

    // MARK: Do something

    func presentLogin(response: Login.Process.Response) {
        var result: Bool
        switch response.result {
        case .loginOk:
            result = true
        case .loginInvalid:
            result = false
        }
        let viewModel = Login.Process.ViewModel(signInOk: result)
        viewController?.displayLogin(viewModel: viewModel)
    }

    func presentError(code: Login.Process.Response.Error, description: String) {
        switch code {
        case .invalidUserName:
            viewController?.displayInvalidUserName(description: description)
        case .invalidPassword:
            viewController?.displayInvalidPassword(description: description)
        default:
            viewController?.displayError(description: description)
        }

    }
}
